apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: misskey-ingress
  namespace: misskey
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: cloudflare-tunnel
  rules:
  - host: misskey.supaperman.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port:
              number: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: misskey
spec:
  type: ClusterIP
  selector:
    app: web
  ports:
  - name: http
    port: 3000
    targetPort: 3000

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: web-deployment
  namespace: misskey
  labels:
    deploy: web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "75%"
      maxSurge: "50%"
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #           - key: kubernetes.io/hostname
      #             operator: In
      #             values:
      #               - pi31
      #               - pi32
      #               - pi33
      containers:
      - name: web
        image: misskey/misskey:latest
        volumeMounts:
        - mountPath: /misskey/files
          name: misskey-files
        - mountPath: /misskey/.config
          name: misskey-config
        ports:
        - containerPort: 3000
        # resources:
        #   limits:
        #     cpu: "2"
        command: ["pnpm", "run", "migrateandstart"]
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
      volumes:
      - name: misskey-files
        persistentVolumeClaim:
          claimName: pvc-misskey-files
      - name: misskey-config
        persistentVolumeClaim:
          claimName: pvc-misskey-config
